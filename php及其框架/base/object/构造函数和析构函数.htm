<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>构造函数和析构函数</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
p{
margin:0
}
</style>

</head>

<body>
<H2><FONT color=#008000>构造函数</FONT></H2>
<P>function __construct(...){</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent::__construct(....){</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Base::__construct(...){</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</P>
<P> }</P>
<P>&nbsp;</P>
<P>子类如若没有定义 则会自动继承父类的</P>
<P>子类可以重新定义构造函数（参数个数与父类没有任何关系）。</P>
<P>子类如若调用父类构造函数用【parent】</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
如若调用父类的父类...等等。直接用【类名】</P>
<P>&nbsp;</P>
<P><FONT color=#ff0000>为了实现向后兼容性，如果 PHP 5 在类中找不到 </FONT><A 
class=link 
href="mk:@MSITStore:C:\Users\EDZ\Desktop\php74_zh(2020).chm::/res/language.oop5.decon.html#object.construct"><FONT color=#ff0000>__construct()</FONT></A><FONT color=#ff0000> 
函数并且也没有从父类继承一个的话，它就会尝试寻找旧式的构造函数，也就是和类同名的函数。</FONT></P>
<P>&nbsp;</P>
<H2><FONT color=#008000>析构函数</FONT></H2>
<P>function __destruct(){</P>
<P>}</P>
<P>子类如若没有定义 则会自动继承父类的</P>
<P>子类如若调用父类构造函数用【parent】</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
如若调用父类的父类...等等。直接用【类名】</P>
<P>&nbsp;</P>
<P><FONT color=#ff0000>1、析构函数即使在使用 <SPAN class=function><A 
class=function 
href="mk:@MSITStore:C:\Users\EDZ\Desktop\php74_zh(2020).chm::/res/function.exit.html">exit()</A></SPAN> 
终止脚本运行时也会被调用。在析构函数中调用 <SPAN class=function><A class=function 
href="mk:@MSITStore:C:\Users\EDZ\Desktop\php74_zh(2020).chm::/res/function.exit.html">exit()</A></SPAN> 
将会中止其余关闭操作的运行</FONT></P>
<P><FONT color=#ff0000>2、试图在析构函数（在脚本终止时被调用）中抛出一个异常会导致致命错误。</FONT></P>
<P><FONT color=#ff0000>3、析构函数在脚本关闭时调用，此时所有的 HTTP 
头信息已经发出。脚本关闭时的工作目录有可能和在 SAPI（如 apache）中时不同。【在析构函数中进行文档操作需要慎重】</FONT></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P></body>
</html>
